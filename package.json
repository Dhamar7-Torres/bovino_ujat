{
  "name": "cattle-management-system",
  "version": "1.0.0",
  "description": "Sistema integral de gestión de bovinos para UJAT - Universidad Juárez Autónoma de Tabasco",
  "private": true,
  "author": {
    "name": "UJAT - Universidad Juárez Autónoma de Tabasco",
    "email": "contacto@ujat.mx",
    "url": "https://www.ujat.mx"
  },
  "license": "MIT",
  "homepage": "https://bovino-ujat.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/ujat/cattle-management-system.git"
  },
  "bugs": {
    "url": "https://github.com/ujat/cattle-management-system/issues",
    "email": "soporte@bovino-ujat.com"
  },
  "keywords": [
    "cattle-management",
    "bovinos",
    "ganadería",
    "livestock",
    "veterinary",
    "ranch-management",
    "agricultural-technology",
    "ujat",
    "tabasco",
    "mexico",
    "react",
    "nodejs",
    "postgresql",
    "express",
    "vite",
    "geolocation",
    "3d-models",
    "spline",
    "leaflet"
  ],
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "install:all": "npm install && npm run install:frontend && npm run install:backend",
    "install:frontend": "cd frontend && npm install",
    "install:backend": "cd backend && npm install",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:backend:debug": "cd backend && npm run dev:debug",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:frontend": "cd frontend && npm run preview",
    "start:backend": "cd backend && npm start",
    "start:prod": "cd backend && npm run start:prod",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm run test",
    "test:backend": "cd backend && npm run test",
    "test:coverage": "npm run test:coverage:frontend && npm run test:coverage:backend",
    "test:coverage:frontend": "cd frontend && npm run test:coverage",
    "test:coverage:backend": "cd backend && npm run test:coverage",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "lint:fix": "npm run lint:fix:frontend && npm run lint:fix:backend",
    "lint:fix:frontend": "cd frontend && npm run lint:fix",
    "lint:fix:backend": "cd backend && npm run lint:fix",
    "format": "npm run format:frontend && npm run format:backend",
    "format:frontend": "cd frontend && npm run format",
    "format:backend": "cd backend && npm run format",
    "clean": "npm run clean:frontend && npm run clean:backend && npm run clean:root",
    "clean:frontend": "cd frontend && npm run clean",
    "clean:backend": "cd backend && npm run clean",
    "clean:root": "rimraf node_modules package-lock.json",
    "clean:all": "npm run clean && npm run clean:cache",
    "clean:cache": "npm cache clean --force",
    "setup": "npm run install:all && npm run setup:env && npm run setup:db",
    "setup:env": "npm run setup:env:frontend && npm run setup:env:backend",
    "setup:env:frontend": "cd frontend && cp .env.example .env.local",
    "setup:env:backend": "cd backend && cp .env.example .env",
    "setup:db": "cd backend && npm run db:setup",
    "db:migrate": "cd backend && npm run db:migrate",
    "db:seed": "cd backend && npm run db:seed",
    "db:reset": "cd backend && npm run db:reset",
    "db:backup": "cd backend && npm run db:backup",
    "db:restore": "cd backend && npm run db:restore",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "docker-compose restart",
    "docker:clean": "docker-compose down -v --remove-orphans && docker system prune -f",
    "deploy:staging": "npm run build && npm run deploy:staging:backend && npm run deploy:staging:frontend",
    "deploy:production": "npm run build && npm run deploy:prod:backend && npm run deploy:prod:frontend",
    "deploy:staging:frontend": "cd frontend && npm run deploy:staging",
    "deploy:staging:backend": "cd backend && npm run deploy:staging",
    "deploy:prod:frontend": "cd frontend && npm run deploy:production",
    "deploy:prod:backend": "cd backend && npm run deploy:production",
    "analyze": "npm run analyze:frontend && npm run analyze:backend",
    "analyze:frontend": "cd frontend && npm run analyze",
    "analyze:backend": "cd backend && npm run analyze",
    "security:audit": "npm audit && npm run security:audit:frontend && npm run security:audit:backend",
    "security:audit:frontend": "cd frontend && npm audit",
    "security:audit:backend": "cd backend && npm audit",
    "security:fix": "npm audit fix && npm run security:fix:frontend && npm run security:fix:backend",
    "security:fix:frontend": "cd frontend && npm audit fix",
    "security:fix:backend": "cd backend && npm audit fix",
    "docs:generate": "npm run docs:api && npm run docs:frontend",
    "docs:api": "cd backend && npm run docs:generate",
    "docs:frontend": "cd frontend && npm run docs:generate",
    "docs:serve": "npm run docs:generate && http-server docs -p 8080",
    "version:patch": "npm version patch && npm run version:sync",
    "version:minor": "npm version minor && npm run version:sync",
    "version:major": "npm version major && npm run version:sync",
    "version:sync": "node scripts/sync-versions.js",
    "health:check": "npm run health:check:backend && npm run health:check:frontend",
    "health:check:backend": "cd backend && npm run health:check",
    "health:check:frontend": "cd frontend && npm run health:check",
    "logs": "npm run logs:backend",
    "logs:backend": "cd backend && npm run logs",
    "logs:frontend": "cd frontend && npm run logs",
    "backup": "npm run backup:db && npm run backup:uploads",
    "backup:db": "cd backend && npm run backup:db",
    "backup:uploads": "cd backend && npm run backup:uploads",
    "restore": "npm run restore:db && npm run restore:uploads",
    "restore:db": "cd backend && npm run restore:db",
    "restore:uploads": "cd backend && npm run restore:uploads",
    "update:deps": "npm update && npm run update:deps:frontend && npm run update:deps:backend",
    "update:deps:frontend": "cd frontend && npm update",
    "update:deps:backend": "cd backend && npm update",
    "check:updates": "ncu -u && npm run check:updates:frontend && npm run check:updates:backend",
    "check:updates:frontend": "cd frontend && ncu -u",
    "check:updates:backend": "cd backend && ncu -u"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "rimraf": "^5.0.5",
    "npm-check-updates": "^16.14.12",
    "http-server": "^14.1.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "commitizen": "^4.3.0",
    "cz-conventional-changelog": "^3.3.0",
    "@commitlint/cli": "^18.4.4",
    "@commitlint/config-conventional": "^18.4.4",
    "semantic-release": "^22.0.12",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^9.2.6",
    "dotenv": "^16.3.1",
    "shelljs": "^0.8.5"
  },
  "optionalDependencies": {
    "docker": "^1.0.0",
    "docker-compose": "^0.24.2"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-push": "npm run test && npm run lint"
    }
  },
  "lint-staged": {
    "frontend/**/*.{js,jsx,ts,tsx}": [
      "cd frontend && npm run lint:fix",
      "cd frontend && npm run format"
    ],
    "backend/**/*.{js,ts}": [
      "cd backend && npm run lint:fix",
      "cd backend && npm run format"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "*.sql": [
      "sql-formatter --write"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "release": {
    "branches": [
      "main",
      "master",
      {
        "name": "beta",
        "prerelease": true
      }
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/github",
      [
        "@semantic-release/git",
        {
          "assets": [
            "package.json",
            "frontend/package.json",
            "backend/package.json",
            "CHANGELOG.md"
          ],
          "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
        }
      ]
    ]
  },
  "volta": {
    "node": "18.19.0",
    "npm": "10.2.3"
  },
  "packageManager": "npm@10.2.3",
  "funding": {
    "type": "institutional",
    "url": "https://www.ujat.mx/donaciones"
  },
  "contributors": [
    {
      "name": "División Académica de Ciencias Biológicas",
      "email": "dacbiol@ujat.mx",
      "url": "https://www.ujat.mx/oferta/DacBiol"
    },
    {
      "name": "Carrera de Medicina Veterinaria y Zootecnia",
      "email": "veterinaria@ujat.mx"
    }
  ],
  "directories": {
    "frontend": "./frontend",
    "backend": "./backend",
    "docs": "./docs",
    "scripts": "./scripts",
    "docker": "./docker"
  },
  "files": [
    "frontend/dist",
    "backend/dist",
    "docs",
    "scripts",
    "docker",
    "README.md",
    "LICENSE",
    "CHANGELOG.md"
  ],
  "main": "backend/dist/server.js",
  "type": "module",
  "imports": {
    "#frontend/*": "./frontend/src/*",
    "#backend/*": "./backend/src/*",
    "#shared/*": "./shared/*"
  },
  "exports": {
    ".": {
      "import": "./backend/dist/server.js",
      "require": "./backend/dist/server.js"
    },
    "./frontend": "./frontend/dist/index.html",
    "./package.json": "./package.json"
  },
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "overrides": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "peerDependencies": {
    "node": ">=18.0.0"
  },
  "os": [
    "linux",
    "darwin",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "preferGlobal": false,
  "private": true,
  "workspaces": {
    "packages": [
      "frontend",
      "backend"
    ],
    "nohoist": [
      "**/sharp",
      "**/canvas",
      "**/sqlite3"
    ]
  }
}